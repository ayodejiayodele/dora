name: Deployment Frequuency

on:
  workflow_dispatch:
    inputs: 
      workflowname:
        description: 'Workflow name of yaml filename'
        required: true 
        type: string
      jobname:
        description: 'Job name responsible for production deployment'
        type: string 


jobs:
  download:
    runs-on: ubuntu-latest
    steps:
      - name: 'Download artifact'
        uses: actions/github-script@v6
        with:
          script: |

            let productWorkflows = []

            const workflowRuns = await github.rest.actions.listWorkflowRuns({
                owner: context.repo.owner,
                repo: context.repo.repo,
                workflow_id: ${{ inputs.workflowName }},
              });

            for (const workflowRun of workflowRuns.data.workflow_runs) {
              const jobs = await github.rest.actions.listJobsForWorkflowRun({
                owner: context.repo.owner,
                repo: context.repo.repo,
                run_id: workflowRun.id,
              });

              if(!${{ inputs.jobName }}){
                productWorkflows.push(jobs.data.jobs)
              }else{
                const filteredProductionJob = jobs.data.jobs.filter(job => job.name === ${{ inputs.jobname }})

                if (filteredProductionJob.length > 0 && filteredProductionJob[0].conclusion === 'success') {
                  productWorkflows.push(workflowRun)
                }
              }
            }


