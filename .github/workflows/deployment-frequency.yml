name: Deployment Frequency

on:
  workflow_dispatch:
    inputs: 
      repo:
        description: 'Repository name'
        required: true
        default: 'dora'
      workflowName:
        description: 'Workflow name of yaml filename'
        required: true 
        type: string
      jobname:
        description: 'Job name responsible for production deployment'
        type: string
        required: false
      numberOfDays:
        description: 'Number of days to check for deployment frequency'
        type: integer
        default: 7
        required: false



jobs:
  calculate-frequency:
    runs-on: ubuntu-latest
    steps:
      - name: calculate-non-workingdays
        run: |
          echo "Calculating non-working days"

          numberOfDays=${{ github.event.inputs.numberOfDays }}
          if [ -z "$numberOfDays" ]; then
            numberOfDays=7
          elif [ $numberOfDays -lt 7 ]; then
            numberOfDays=7
          fi

          currentDate=$(date +%Y-%m-%d)
          startDate=$(date -d "$currentDate - ${{ github.event.inputs.numberOfDays }} days" +%Y-%m-%d)

          echo "startDate: $startDate"
          echo "currentDate: $currentDate"
          echo "numberOfDays: ${{ github.event.inputs.numberOfDays }}"

          workingDaysApi=$(curl --request GET \
          --url 'https://working-days.p.rapidapi.com/list_non_working_days?country_code=AU&start_date='$startDate'&end_date='$currentDate \
          --header 'X-RapidAPI-Host: working-days.p.rapidapi.com' \
          --header 'X-RapidAPI-Key: ${{ secrets.WORKING_DAYS_API_KEY }}')

          if [ -n "$workingDaysApi" ]; then
            echo "Working days API result: $workingDaysApi"
            nonWorkingDays=$(echo $workingDaysApi | jq '.result.non_working_days | length')
            echo "Non-working days: $nonWorkingDays"
          else
            echo "Working days API result is empty"
            nonWorkingDays=0
          fi
          echo "::set-output name=nonWorkingDays::$nonWorkingDays"
          echo "::set-output name=numberOfDays::$numberOfDays"
      - name: 'Get Workflows and Jobs'
        uses: actions/github-script@v6
        with:
          script: |

            let productWorkflowRuns = []
            let eligibleWorkflowsRuns = []
            let completionDates = []
            let uniqueDates = []
            let color = 'red'
            let numberOfDays =  ${{ steps.calculate-frequency.outputs.numberOfDays }}
            let workflowId = "${{ inputs.workflowName }}"
            let jobName = "${{ inputs.jobname }}"
