name: Deployment Frequency

on:
  workflow_dispatch:
    inputs: 
      repo:
        description: 'Repository name'
        required: true
        default: 'dora'
      workflowName:
        description: 'Workflow name of yaml filename'
        required: true 
        type: string
      jobname:
        description: 'Job name responsible for production deployment'
        type: string
        required: false
      numberOfDays:
        description: 'Number of days to check for deployment frequency'
        type: integer
        default: 30
        required: false



jobs:
  calculate-frequency:
    runs-on: ubuntu-latest
    steps:
      - name: 'Get Workflows and Jobs'
        uses: actions/github-script@v6
        with:
          script: |

            let productWorkflowRuns = []
            let eligibleWorkflowsRuns = []
            let completionDates = []
            let uniqueDates = []
            let color = 'red'
            let numberOfDays =  ${{ inputs.numberOfDays }}
            let workflowId = "${{ inputs.workflowName }}"
            let jobName = "${{ inputs.jobname }}"

            if (numberOfDays < 30) {
              numberOfDays = 30
            }
            console.log('Number of days')
            console.log(numberOfDays)
            console.log('Workflow ID')
            console.log(workflowId)

            //Remove numberOfDays from the current date
            let earliestDate = new Date()
            earliestDate.setDate(earliestDate.getDate() - numberOfDays)
            let dateToCompare = earliestDate.toISOString()

            console.log('Earliest date')
            console.log(earliestDate.getDate())
            console.log(earliestDate.toISOString())

            const workflowRuns = await github.rest.actions.listWorkflowRuns({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: workflowId,
            });

            console.log('Workflow runs count')
            console.log(workflowRuns.data.total_count)


            //Get all workflow runs that were completed after the earliest date
            for (const workflowRun of workflowRuns.data.workflow_runs) {
              if (workflowRun.status === 'completed' && workflowRun.updated_at > dateToCompare) {
                eligibleWorkflowsRuns.push(workflowRun)
                completionDates.push(workflowRun.updated_at)
              }
            }

            console.log('Eligible workflow runs count')
            console.log(eligibleWorkflowsRuns.length)
            console.log('Completion dates count')
            console.log(completionDates.length)

            //if no jobName is provided, add all eligibleWorkflowsRuns to productWorkflowRuns
            if (jobName === '') {
              productWorkflowRuns = eligibleWorkflowsRuns
            } else {
              //Get all workflow runs that have the jobName
              for (const workflowRun of eligibleWorkflowsRuns) {
                const jobs = await github.rest.actions.listJobsForWorkflowRun({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  run_id: workflowRun.id,
                });

                for (const job of jobs.data.jobs) {
                  if (job.name === jobName) {
                    productWorkflowRuns.push(workflowRun)
                  }
                }
              }
            }
            
            console.log('Product workflow runs count')
            console.log(productWorkflowRuns.length)

